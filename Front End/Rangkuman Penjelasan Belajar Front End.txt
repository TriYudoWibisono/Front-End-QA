Yang perlu di pelajari untuk menjadi Front End :
1. HTML + CSS + JavaScript
2. bikin portfolio (bikin website pribadi, company profil, DLL)
~ teknologi yang mesti dipelajari :
3. Version Control System (git, gitlab atau github)
4. CSS Pre-processor (Sass, {less}, stylus)
5. CSS Framework  / Library (Bootstrap, Tailwind, Material UI)
6. Web Components (membuat custom elements, Shadow DOM, HTML Template)
7. Node JS
8. Build Tools & Task Runner (grunt, gulp, webpack, vite)
9. Frontend Framework / Library (react, vue, angular, dll)
10. state management
11. API (Application Programming Interface)
12. Website Deployment (meng-upload website ke webserver (github pages, vercel, netlify) agar bisa dilihat orang lain)
13. Testing Tools (Jest, Mocha, Jasmine, Selenium)

Masih ingin lebih  pro ? bisa pelajari berikut :
14. Static Site Generators (Next (react), NUXTJS (vue), Gatsby(react))
15. Progressive Web Apps (PWA) --> Web Storage, Web Socket, Service Worker
16. Web Assembly



HTML 

a. basic : belajar tag, fungsi tag, atributte tag
b. Semantic Elements : tag HTML apa saja yang bisa digunakan (khususnya HTML 5) yang bisa digunakan agar struktur dari website kita memiliki makna. tag apa yang kita gunakan agar tepat.
c. Form Validation : jangan dulu mengandalkan bahasa pemrograman, pada pada HTML memiliki kemampuan untuk memvalidasi form. misal type email untuk input email. agar orang tidak bisa masukkan data ke form input email, dengan format yang bukan email. required, autocomplete, dll
d. SVG & Canvas
e. Information Architecture : menentukan informasi mana yang penting yang akan di tampilkan ke dalam website kita. ada hirarki informasinya.
f. Accessibility : bagaimana website kita bisa di akses dengan baik, oleh temen2 kita yang memiliki keterbatasan.
G. SEO : agar website yang kita buat bisa terindex dengan baik di mesin pencari misalnya google.


CSS

a. Basic : anatomi CSS/dasar CSS adalah mempelajari apa itu selector, bagaimana menyeleksi elemen pada HTML menggunakan CSS, Property CSS ada apa saja, dan nilai yang bisa kita beri disetiap propertynya apa. selector --> property --> value.
b. CSS Layouting : menghias elemen2 didalam HTML agar posisinya sesuai dengan keinginan kita. unit --> box model --> positioning --> flex box --> grid --> dll
c. filter, Transition & Animation : agar website lebih interactive
d. Responsive Design : agar bisa digunakan di beragam device. fluit layout --> media query --> satuan2 yang biasa digunakan untuk responsive (em, rem, vw, vh, vmin, vmax, dll)
e. Modern CSS : mempelajari fitur2 CSS yang saat ini semakin keren. misal di CSS skrng ada variabel. kita juga bisa memberikan efek2 menarik baik itu 2 dimensi ataupun 3 dimensi kepada elemen kita. juga bisa melakukan operasi matematika. dll
f. CSS Architecture : bagaimana mengelola kode CSS agar mudah untuk digunakan / agar efisien (Objek Oriented  CSS, .BEM (Block Elemen Modifier))


JavaScript

a. Basic Concepts --> konsep2 dasar JavaScript, Syntaks JS, konsep-konsep dasar programming JS (bgmn variabel bekerja, variabel seperti apa, pengulangan, pengkondisian, array, function, objek, DLL) .
b. DOM (Dokumen Object Model) : Bagaimana kita bisa berinteraksi dengan elemen2 HTML yang kita buat sebelumnya). 
- Pada DOM wajib mempelajari DOM tree/ pohom DOM. lalu pelajari Dom travesal (menelusuri noted elemen pada web kita menggunakan DOM.
c. ES6 + Modular JavaScript.
d. Asynchronous JavaScript
e. Fetch API :Bagaimana caranya kita ngambil data dari tempat lain, itu menggunakan API milik JS yang namanya fetch API


CSS Pre-processor (Sass, {less}, stylus)

merupakah sebuah teknologi yang membuat CSS kita lebih sakti lagi. Sandhika  galih lebih prefer *Sass*. Pada CSS Pre-processor ini kita bisa melakukan fitur fitur yang tidak bisa dilakukan di CSS misalnya saja sebuah function, melakukan pengulangan, melakukan pengkondisian didalam CSS kita.


CSS Framework  / Library

Ada macam-macam Framework / Library CSS. jika kita bisa menguasai salah satunya saja, maka kita akan lebih mudah memahami yang lainnya jika ingin belajar  Framework / Library yang lain. dan banyak di Framework CSS ini, dimana didalamnya terdapat CSS - Prosessor. jadi jika kita sudah memiliki pemahaman mengenai CSS - Prosessor tadi, maka akan semakin mempermudah kita jika ingin memodifikasi isi dari Frameworknya


Web Components (membuat custom elements, Shadow DOM, HTML Template)

mempelajari materi diatas berguna untuk nanti kita akan belajar Front End Framework.



Node JS 

kita perlu belajar Node JS untuk supaya kita bisa menjalankan JavaScript diluar browser. dan juga nanti kita butuh sebuah package manajer bawaan Node JS yang namanya NVM. karena kedepannya kita bakalan sering menggunakan NVM ini untuk mengambil / Menyimpan modul2 dari aplikasi kita



Build Tools & Task Runner

digunakan untuk mempermudah kita melakukan serangkaian pekerjaan yang berulang-ulang. atau ketika nanti kita membutuhkan banyak library atau banyak script didalam aplikasi kita. misalnya kita memanggil 10 script didalam aplikasi kita, kita bisa gunakan build tools, yang sebelumnya manggil 10 script, bisa jadi manggil dengan 1 script saja.



state management

adalah sebuah tools atau teknologi untuk mengelola state ketika kita menggunakan Framework FE. misal kita menggunakan react, kita bisa menggunakan state management redux, ketika menggunakan vue kita gunakan state management vuex dan jika menggunakan angular, kita gunakan state management Rxjs


API (Application Programming Interface)

sebuah teknologi agar kita (Front End) bisa ngobrol dengan bagian BackEnd. atau lebih spesifik lagi kita harus paham tentang rest API ({REST:API}).  Dimana nanti kita menggunakan notasi / bentuk data yang dinamakan {JSON} atau yang lebih advanced lagi yaitu GraphQl.


Website Deployment

bagaimana caranya website yang sudah kita buat bisa dilihat oleh orang lain. jadi dideploy ke sebuah web server. paling sederhana menggunakan github pages. atau juga bisa menggunakan vercel atau netlify.


Testing Tools

bagaimana mengetest aplikasi kita.



 


